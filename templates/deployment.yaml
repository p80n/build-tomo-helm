apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "build-tomo.fullname" . }}
  labels:
    {{- include "build-tomo.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "build-tomo.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        name: {{ include "build-tomo.name" . }}
        {{- include "build-tomo.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "build-tomo.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if or .Values.credentials.secret  .Values.credentials.secretRef }}
          envFrom:
          - secretRef:
              name: {{ default "credentials"  .Values.credentials.secretRef }}
          {{ end }}
          {{ if or .Values.buildJobImage .Values.credentials.environment }}
          env:
          {{- if .Values.buildJobImage }}
          - name: BUILD_JOB_IMAGE
            value: .Values.buildJobImage
          {{- end }}
          {{- with .Values.credentials.environment }}
          - name: GITHUB_WEBHOOK_SECRET
            value: {{ .githubSecret }}
          - name: DOCKER_TOKEN
            value: {{ .dockerToken }}
          - name: DOCKER_USER
            value: {{ .dockerUser }}
          {{- end }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
